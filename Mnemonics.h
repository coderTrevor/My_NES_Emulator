#pragma once

// MNEMONIC strings:
const char UNHANDLED[] = "???";
const char MN_ASL_zp[] = "ASL zp";  // 06
const char MN_ASL[] = "ASL i";      // 0A
const char MN_ASL_ABS[] = "ASL a";  // 0E
const char MN_BPL[] = "BPL r";      // 10
const char MN_ASL_zp_x[] = "ASL zp,x";  // 16
const char MN_CLC[] = "CLC i";      // 18
const char MN_ASL_ABS_X[] = "ASL a,x";  // 1E
const char MN_JSR_ABS[] = "JSR a";  // 20
const char MN_BIT_ZP[] = "BIT zp";  // 24
const char MN_AND_ZP[] = "AND zp";  // 25
const char MN_AND_IMM[] = "AND #";  // 29
const char MN_BIT_ABS[] = "BIT a";  // 2C
const char MN_AND_ABS[] = "AND a";  // 2D
const char MN_BMI[] = "BMI r";      // 30
const char MN_AND_ZP_X[] = "AND zp,x"; // 35
const char MN_SEC[] = "SEC i";          // 38
const char MN_AND_ABS_Y[] = "AND a,y";  // 39
const char MN_AND_ABS_X[] = "AND a,x";  // 3D
const char MN_LSR_ZP[] = "LSR zp";      // 46
const char MN_PHA[] = "PHA s";      // 48
const char MN_LSR[] = "LSR i";      // 4A
const char MN_JMP_ABS[] = "JMP a";  // 4C
const char MN_LSR_ABS[] = "LSR a";  // 4E
const char MN_LSR_ZP_X[] = "LSR zp,x";  // 56
const char MN_LSR_ABS_X[] = "LSR a,x";  // 5E
const char MN_RTS[] = "RTS s";      // 60
const char MN_ADC_ZP[] = "ADC zp";  // 65
const char MN_PLA[] = "PLA s";      // 68
const char MN_ADC_IMM[] = "ADC #";  // 69
const char MN_JMP_IND[] = "JMP (a)"; // 6C
                                     //const char MN_ADC_ABS[] = "ADC a";  // 6D
                                     //const char MN_ADC_X[] = "ADC a,x";  // 7D
                                     //const char MN_ADC_Y[] = "ADC a,y";  // 79
const char MN_STA_ZP_X_IND[] = "STA (zp, x)";   // 81
const char MN_STY_ZP[] = "LDY zp";  // 84
const char MN_STA_ZP[] = "STA zp";  // 85
const char MN_STX_ZP[] = "STX zp";  // 86
const char MN_DEY[] = "DEY i";      // 88
const char MN_TXA[] = "TXA i";      // 8A
const char MN_STY_ABS[] = "STY a";  // 8C
const char STA_ABS[] = "STA a";     // 8D
const char MN_STX_ABS[] = "STX a";  // 8E
const char MN_BCC[] = "BCC r";      // 90
const char MN_STA_ZP_IND_Y[] = "STA (zp),y"; // 91
const char MN_STY_ZP_X[] = "STY zp,x";  // 94
const char MN_STA_ZP_X[] = "STA zp,x";  // 95
const char MN_STX_ZP_Y[] = "STX zp,y";  // 96
const char MN_STA_ABS_Y[] = "STA a,y";  // 99
const char MN_STA_ABS_X[] = "STA a,x";  // 9D
const char MN_TXS[] = "TXS i";      // 9A
const char MN_LDY_IMM[] = "LDY #";  // A0
const char MN_LDA_ZP_X_IND[] = "LDA (zp, x)"; // A1
const char MN_LDX_IMM[] = "LDX #";  // A2
const char MN_LDY_ZP[] = "LDY zp";  // A4
const char MN_LDA_ZP[] = "LDA zp";  // A5
const char MN_LDX_ZP[] = "LDX zp";  // A6
const char MN_TAY[] = "TAY i";      // A8
const char LDA_IMM[] = "LDA #";     // A9
const char MN_TAX[] = "TAX";        // AA
const char MN_LDA_ABS[] = "LDA a";  // AD
const char MN_LDX_ABS[] = "LDX a";  // AE
const char MN_BCS[] = "BCS r";      // B0
const char MN_LDA_ZP_IND_Y[] = "LDA (zp), y"; // B1
const char MN_LDY_ZP_X[] = "LDY zp,x";  // B4
const char MN_LDA_ZP_X[] = "LDA zp,x";  // B5
const char MN_LDX_ZP_Y[] = "LDX zp,y";  // B6
const char MN_LDA_ABS_Y[] = "LDA a,y";  // B9
const char MN_LDA_ABS_X[] = "LDA a,x";  // BD
const char MN_LDX_ABS_Y[] = "LDX a,y";  // BE
const char MN_CPY_IMM[] = "CPY #";  // C0
const char MN_CMP_ZP[] = "CMP zp";  // C5
const char MN_DEC_ZP[] = "DEC zp";  // C6
const char MN_INY[] = "INY i";      // C8
const char MN_CMP_IMM[] = "CMP #";  // C9
const char MN_DEX[] = "DEX";        // CA
const char MN_CMP_ABS[] = "CMP a";  // CD
const char MN_DEC_ABS[] = "DEC a";  // CE
const char MN_BRNE_r[] = "BRNE r";  // D0
const char MN_CMP_ZP_X[] = "CMP zp,x";  // D5
const char MN_DEC_ZP_X[] = "DEC zp,x";  // D6
const char MN_CMP_ABS_Y[] = "CMP a,y";  // D9
const char MN_CMP_ABS_X[] = "CMP a,x";  // DD
const char MN_DEC_ABS_X[] = "DEC a,x";  // DE
const char MN_CPX_IMM[] = "CPX #";  // E0
const char MN_CPX_ZP[] = "CPX zp";  // E4
const char MN_SBC_ZP[] = "SBC zp";  // E5
const char MN_INC_ZP[] = "INC zp";  // E6
const char MN_INX[] = "INX";        // E8
const char MN_SBC_IMM[] = "SBC #";  // E9
const char MN_NOP[] = "NOP i";      // EA
const char MN_CPX_ABS[] = "CPX a";  // EC
const char MN_SBC_ABS[] = "SBC a";  // ED
const char MN_INC_ABS[] = "INC a";  // EE
const char MN_BEQ[] = "BEQ r";      // F0
const char MN_SBC_ZP_X[] = "SBC zp,x";  // F5
const char MN_INC_ZP_X[] = "INC zp,x";  // F6
const char MN_SBC_ABS_Y[] = "SBC a,y";  // F9
const char MN_SBC_ABS_X[] = "SBC a,x";  // FD
const char MN_INC_ABS_X[] = "INC a,x";  // FE
// end strings